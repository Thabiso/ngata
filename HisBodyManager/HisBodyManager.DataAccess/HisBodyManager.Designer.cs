//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkAddress_AddressType", "addresstype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.addresstype), "address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.address), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkAddress_Contactdetails", "contactdetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HisBodyManager.DataAccess.contactdetail), "address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.address), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkAddress_memeber", "member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.member), "address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.address), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkchurchinformation_zone", "zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.zone), "churchinformation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.churchinformation), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkChurchMemberRoles_member", "member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.member), "churchmemberrole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.churchmemberrole), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkChurchmemeberRoles_churchRole", "churchrole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.churchrole), "churchmemberrole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.churchmemberrole), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkComments_CommentType", "commenttype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.commenttype), "comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.comment), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkComments_Member", "member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.member), "comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.comment), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "kfcontactdetails_member", "member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.member), "contactdetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.contactdetail), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkmember_gender", "gender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.gender), "member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.member), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkGroup_GroupType", "grouptype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.grouptype), "membergroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.membergroup), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkMemberAttendance_Member", "member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HisBodyManager.DataAccess.member), "memberattendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.memberattendance), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkgroup", "group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HisBodyManager.DataAccess.group), "usergroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.usergroup), true)]
[assembly: EdmRelationshipAttribute("hisbodymanagerModel", "fkuser", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HisBodyManager.DataAccess.user), "usergroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HisBodyManager.DataAccess.usergroup), true)]

#endregion

namespace HisBodyManager.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class hisbodymanagerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new hisbodymanagerEntities object using the connection string found in the 'hisbodymanagerEntities' section of the application configuration file.
        /// </summary>
        public hisbodymanagerEntities() : base("name=hisbodymanagerEntities", "hisbodymanagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new hisbodymanagerEntities object.
        /// </summary>
        public hisbodymanagerEntities(string connectionString) : base(connectionString, "hisbodymanagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new hisbodymanagerEntities object.
        /// </summary>
        public hisbodymanagerEntities(EntityConnection connection) : base(connection, "hisbodymanagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<address> addresses
        {
            get
            {
                if ((_addresses == null))
                {
                    _addresses = base.CreateObjectSet<address>("addresses");
                }
                return _addresses;
            }
        }
        private ObjectSet<address> _addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<addresstype> addresstypes
        {
            get
            {
                if ((_addresstypes == null))
                {
                    _addresstypes = base.CreateObjectSet<addresstype>("addresstypes");
                }
                return _addresstypes;
            }
        }
        private ObjectSet<addresstype> _addresstypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<churchinformation> churchinformations
        {
            get
            {
                if ((_churchinformations == null))
                {
                    _churchinformations = base.CreateObjectSet<churchinformation>("churchinformations");
                }
                return _churchinformations;
            }
        }
        private ObjectSet<churchinformation> _churchinformations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<churchmemberrole> churchmemberroles
        {
            get
            {
                if ((_churchmemberroles == null))
                {
                    _churchmemberroles = base.CreateObjectSet<churchmemberrole>("churchmemberroles");
                }
                return _churchmemberroles;
            }
        }
        private ObjectSet<churchmemberrole> _churchmemberroles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<churchrole> churchroles
        {
            get
            {
                if ((_churchroles == null))
                {
                    _churchroles = base.CreateObjectSet<churchrole>("churchroles");
                }
                return _churchroles;
            }
        }
        private ObjectSet<churchrole> _churchroles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<comment> comments
        {
            get
            {
                if ((_comments == null))
                {
                    _comments = base.CreateObjectSet<comment>("comments");
                }
                return _comments;
            }
        }
        private ObjectSet<comment> _comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<commenttype> commenttypes
        {
            get
            {
                if ((_commenttypes == null))
                {
                    _commenttypes = base.CreateObjectSet<commenttype>("commenttypes");
                }
                return _commenttypes;
            }
        }
        private ObjectSet<commenttype> _commenttypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<contactdetail> contactdetails
        {
            get
            {
                if ((_contactdetails == null))
                {
                    _contactdetails = base.CreateObjectSet<contactdetail>("contactdetails");
                }
                return _contactdetails;
            }
        }
        private ObjectSet<contactdetail> _contactdetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<gender> genders
        {
            get
            {
                if ((_genders == null))
                {
                    _genders = base.CreateObjectSet<gender>("genders");
                }
                return _genders;
            }
        }
        private ObjectSet<gender> _genders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<grouptype> grouptypes
        {
            get
            {
                if ((_grouptypes == null))
                {
                    _grouptypes = base.CreateObjectSet<grouptype>("grouptypes");
                }
                return _grouptypes;
            }
        }
        private ObjectSet<grouptype> _grouptypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<meetingtype> meetingtypes
        {
            get
            {
                if ((_meetingtypes == null))
                {
                    _meetingtypes = base.CreateObjectSet<meetingtype>("meetingtypes");
                }
                return _meetingtypes;
            }
        }
        private ObjectSet<meetingtype> _meetingtypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<member> members
        {
            get
            {
                if ((_members == null))
                {
                    _members = base.CreateObjectSet<member>("members");
                }
                return _members;
            }
        }
        private ObjectSet<member> _members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<memberattendance> memberattendances
        {
            get
            {
                if ((_memberattendances == null))
                {
                    _memberattendances = base.CreateObjectSet<memberattendance>("memberattendances");
                }
                return _memberattendances;
            }
        }
        private ObjectSet<memberattendance> _memberattendances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<membergroup> membergroups
        {
            get
            {
                if ((_membergroups == null))
                {
                    _membergroups = base.CreateObjectSet<membergroup>("membergroups");
                }
                return _membergroups;
            }
        }
        private ObjectSet<membergroup> _membergroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<region> regions
        {
            get
            {
                if ((_regions == null))
                {
                    _regions = base.CreateObjectSet<region>("regions");
                }
                return _regions;
            }
        }
        private ObjectSet<region> _regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<title> titles
        {
            get
            {
                if ((_titles == null))
                {
                    _titles = base.CreateObjectSet<title>("titles");
                }
                return _titles;
            }
        }
        private ObjectSet<title> _titles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<zone> zones
        {
            get
            {
                if ((_zones == null))
                {
                    _zones = base.CreateObjectSet<zone>("zones");
                }
                return _zones;
            }
        }
        private ObjectSet<zone> _zones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<group> groups
        {
            get
            {
                if ((_groups == null))
                {
                    _groups = base.CreateObjectSet<group>("groups");
                }
                return _groups;
            }
        }
        private ObjectSet<group> _groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usergroup> usergroups
        {
            get
            {
                if ((_usergroups == null))
                {
                    _usergroups = base.CreateObjectSet<usergroup>("usergroups");
                }
                return _usergroups;
            }
        }
        private ObjectSet<usergroup> _usergroups;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaddresses(address address)
        {
            base.AddObject("addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the addresstypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaddresstypes(addresstype addresstype)
        {
            base.AddObject("addresstypes", addresstype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the churchinformations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochurchinformations(churchinformation churchinformation)
        {
            base.AddObject("churchinformations", churchinformation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the churchmemberroles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochurchmemberroles(churchmemberrole churchmemberrole)
        {
            base.AddObject("churchmemberroles", churchmemberrole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the churchroles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochurchroles(churchrole churchrole)
        {
            base.AddObject("churchroles", churchrole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocomments(comment comment)
        {
            base.AddObject("comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the commenttypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocommenttypes(commenttype commenttype)
        {
            base.AddObject("commenttypes", commenttype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the contactdetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocontactdetails(contactdetail contactdetail)
        {
            base.AddObject("contactdetails", contactdetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the genders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogenders(gender gender)
        {
            base.AddObject("genders", gender);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the grouptypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogrouptypes(grouptype grouptype)
        {
            base.AddObject("grouptypes", grouptype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the meetingtypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomeetingtypes(meetingtype meetingtype)
        {
            base.AddObject("meetingtypes", meetingtype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomembers(member member)
        {
            base.AddObject("members", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the memberattendances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomemberattendances(memberattendance memberattendance)
        {
            base.AddObject("memberattendances", memberattendance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the membergroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomembergroups(membergroup membergroup)
        {
            base.AddObject("membergroups", membergroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToregions(region region)
        {
            base.AddObject("regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the titles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotitles(title title)
        {
            base.AddObject("titles", title);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the zones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTozones(zone zone)
        {
            base.AddObject("zones", zone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogroups(group group)
        {
            base.AddObject("groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the usergroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousergroups(usergroup usergroup)
        {
            base.AddObject("usergroups", usergroup);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new address object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="surburb">Initial value of the Surburb property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="addressTypeId">Initial value of the AddressTypeId property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        public static address Createaddress(global::System.Int32 id, global::System.Int32 memberId, global::System.String street, global::System.String surburb, global::System.String city, global::System.Int32 addressTypeId, global::System.String postalCode)
        {
            address address = new address();
            address.Id = id;
            address.MemberId = memberId;
            address.Street = street;
            address.Surburb = surburb;
            address.City = city;
            address.AddressTypeId = addressTypeId;
            address.PostalCode = postalCode;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private global::System.Int32 _MemberId;
        partial void OnMemberIdChanging(global::System.Int32 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surburb
        {
            get
            {
                return _Surburb;
            }
            set
            {
                OnSurburbChanging(value);
                ReportPropertyChanging("Surburb");
                _Surburb = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surburb");
                OnSurburbChanged();
            }
        }
        private global::System.String _Surburb;
        partial void OnSurburbChanging(global::System.String value);
        partial void OnSurburbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeId
        {
            get
            {
                return _AddressTypeId;
            }
            set
            {
                OnAddressTypeIdChanging(value);
                ReportPropertyChanging("AddressTypeId");
                _AddressTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressTypeId");
                OnAddressTypeIdChanged();
            }
        }
        private global::System.Int32 _AddressTypeId;
        partial void OnAddressTypeIdChanging(global::System.Int32 value);
        partial void OnAddressTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactDetailId
        {
            get
            {
                return _ContactDetailId;
            }
            set
            {
                OnContactDetailIdChanging(value);
                ReportPropertyChanging("ContactDetailId");
                _ContactDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactDetailId");
                OnContactDetailIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactDetailId;
        partial void OnContactDetailIdChanging(Nullable<global::System.Int32> value);
        partial void OnContactDetailIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkAddress_AddressType", "addresstype")]
        public addresstype addresstype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<addresstype>("hisbodymanagerModel.fkAddress_AddressType", "addresstype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<addresstype>("hisbodymanagerModel.fkAddress_AddressType", "addresstype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<addresstype> addresstypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<addresstype>("hisbodymanagerModel.fkAddress_AddressType", "addresstype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<addresstype>("hisbodymanagerModel.fkAddress_AddressType", "addresstype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkAddress_Contactdetails", "contactdetail")]
        public contactdetail contactdetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<contactdetail>("hisbodymanagerModel.fkAddress_Contactdetails", "contactdetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<contactdetail>("hisbodymanagerModel.fkAddress_Contactdetails", "contactdetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<contactdetail> contactdetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<contactdetail>("hisbodymanagerModel.fkAddress_Contactdetails", "contactdetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<contactdetail>("hisbodymanagerModel.fkAddress_Contactdetails", "contactdetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkAddress_memeber", "member")]
        public member member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkAddress_memeber", "member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkAddress_memeber", "member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<member> memberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkAddress_memeber", "member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<member>("hisbodymanagerModel.fkAddress_memeber", "member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="addresstype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class addresstype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new addresstype object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static addresstype Createaddresstype(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            addresstype addresstype = new addresstype();
            addresstype.Id = id;
            addresstype.Name = name;
            addresstype.IsActive = isActive;
            return addresstype;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkAddress_AddressType", "address")]
        public EntityCollection<address> addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<address>("hisbodymanagerModel.fkAddress_AddressType", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<address>("hisbodymanagerModel.fkAddress_AddressType", "address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="churchinformation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class churchinformation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new churchinformation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="zoneId">Initial value of the ZoneId property.</param>
        /// <param name="is">Initial value of the is property.</param>
        public static churchinformation Createchurchinformation(global::System.Int32 id, global::System.String name, global::System.Int32 zoneId, global::System.String @is)
        {
            churchinformation churchinformation = new churchinformation();
            churchinformation.Id = id;
            churchinformation.Name = name;
            churchinformation.ZoneId = zoneId;
            churchinformation.@is = @is;
            return churchinformation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneId
        {
            get
            {
                return _ZoneId;
            }
            set
            {
                OnZoneIdChanging(value);
                ReportPropertyChanging("ZoneId");
                _ZoneId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneId");
                OnZoneIdChanged();
            }
        }
        private global::System.Int32 _ZoneId;
        partial void OnZoneIdChanging(global::System.Int32 value);
        partial void OnZoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String @is
        {
            get
            {
                return _is;
            }
            set
            {
                OnisChanging(value);
                ReportPropertyChanging("is");
                _is = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("is");
                OnisChanged();
            }
        }
        private global::System.String _is;
        partial void OnisChanging(global::System.String value);
        partial void OnisChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkchurchinformation_zone", "zone")]
        public zone zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<zone>("hisbodymanagerModel.fkchurchinformation_zone", "zone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<zone>("hisbodymanagerModel.fkchurchinformation_zone", "zone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<zone> zoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<zone>("hisbodymanagerModel.fkchurchinformation_zone", "zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<zone>("hisbodymanagerModel.fkchurchinformation_zone", "zone", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="churchmemberrole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class churchmemberrole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new churchmemberrole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="memberId">Initial value of the memberId property.</param>
        /// <param name="churchRoleId">Initial value of the ChurchRoleId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static churchmemberrole Createchurchmemberrole(global::System.Int32 id, global::System.Int32 memberId, global::System.Int32 churchRoleId, global::System.Boolean isActive)
        {
            churchmemberrole churchmemberrole = new churchmemberrole();
            churchmemberrole.Id = id;
            churchmemberrole.memberId = memberId;
            churchmemberrole.ChurchRoleId = churchRoleId;
            churchmemberrole.IsActive = isActive;
            return churchmemberrole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 memberId
        {
            get
            {
                return _memberId;
            }
            set
            {
                OnmemberIdChanging(value);
                ReportPropertyChanging("memberId");
                _memberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("memberId");
                OnmemberIdChanged();
            }
        }
        private global::System.Int32 _memberId;
        partial void OnmemberIdChanging(global::System.Int32 value);
        partial void OnmemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchRoleId
        {
            get
            {
                return _ChurchRoleId;
            }
            set
            {
                OnChurchRoleIdChanging(value);
                ReportPropertyChanging("ChurchRoleId");
                _ChurchRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchRoleId");
                OnChurchRoleIdChanged();
            }
        }
        private global::System.Int32 _ChurchRoleId;
        partial void OnChurchRoleIdChanging(global::System.Int32 value);
        partial void OnChurchRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkChurchMemberRoles_member", "member")]
        public member member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkChurchMemberRoles_member", "member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkChurchMemberRoles_member", "member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<member> memberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkChurchMemberRoles_member", "member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<member>("hisbodymanagerModel.fkChurchMemberRoles_member", "member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkChurchmemeberRoles_churchRole", "churchrole")]
        public churchrole churchrole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<churchrole>("hisbodymanagerModel.fkChurchmemeberRoles_churchRole", "churchrole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<churchrole>("hisbodymanagerModel.fkChurchmemeberRoles_churchRole", "churchrole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<churchrole> churchroleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<churchrole>("hisbodymanagerModel.fkChurchmemeberRoles_churchRole", "churchrole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<churchrole>("hisbodymanagerModel.fkChurchmemeberRoles_churchRole", "churchrole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="churchrole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class churchrole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new churchrole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static churchrole Createchurchrole(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            churchrole churchrole = new churchrole();
            churchrole.Id = id;
            churchrole.Name = name;
            churchrole.IsActive = isActive;
            return churchrole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkChurchmemeberRoles_churchRole", "churchmemberrole")]
        public EntityCollection<churchmemberrole> churchmemberroles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<churchmemberrole>("hisbodymanagerModel.fkChurchmemeberRoles_churchRole", "churchmemberrole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<churchmemberrole>("hisbodymanagerModel.fkChurchmemeberRoles_churchRole", "churchmemberrole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new comment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="comment1">Initial value of the Comment1 property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="commentTypeId">Initial value of the CommentTypeId property.</param>
        public static comment Createcomment(global::System.Int32 id, global::System.String user, global::System.DateTime date, global::System.String comment1, global::System.Int32 memberId, global::System.Int32 commentTypeId)
        {
            comment comment = new comment();
            comment.Id = id;
            comment.User = user;
            comment.Date = date;
            comment.Comment1 = comment1;
            comment.MemberId = memberId;
            comment.CommentTypeId = commentTypeId;
            return comment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment1
        {
            get
            {
                return _Comment1;
            }
            set
            {
                OnComment1Changing(value);
                ReportPropertyChanging("Comment1");
                _Comment1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment1");
                OnComment1Changed();
            }
        }
        private global::System.String _Comment1;
        partial void OnComment1Changing(global::System.String value);
        partial void OnComment1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private global::System.Int32 _MemberId;
        partial void OnMemberIdChanging(global::System.Int32 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentTypeId
        {
            get
            {
                return _CommentTypeId;
            }
            set
            {
                OnCommentTypeIdChanging(value);
                ReportPropertyChanging("CommentTypeId");
                _CommentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentTypeId");
                OnCommentTypeIdChanged();
            }
        }
        private global::System.Int32 _CommentTypeId;
        partial void OnCommentTypeIdChanging(global::System.Int32 value);
        partial void OnCommentTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkComments_CommentType", "commenttype")]
        public commenttype commenttype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<commenttype>("hisbodymanagerModel.fkComments_CommentType", "commenttype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<commenttype>("hisbodymanagerModel.fkComments_CommentType", "commenttype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<commenttype> commenttypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<commenttype>("hisbodymanagerModel.fkComments_CommentType", "commenttype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<commenttype>("hisbodymanagerModel.fkComments_CommentType", "commenttype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkComments_Member", "member")]
        public member member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkComments_Member", "member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkComments_Member", "member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<member> memberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkComments_Member", "member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<member>("hisbodymanagerModel.fkComments_Member", "member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="commenttype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class commenttype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new commenttype object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static commenttype Createcommenttype(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            commenttype commenttype = new commenttype();
            commenttype.Id = id;
            commenttype.Name = name;
            commenttype.IsActive = isActive;
            return commenttype;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkComments_CommentType", "comment")]
        public EntityCollection<comment> comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comment>("hisbodymanagerModel.fkComments_CommentType", "comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comment>("hisbodymanagerModel.fkComments_CommentType", "comment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="contactdetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class contactdetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new contactdetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cellNumber">Initial value of the CellNumber property.</param>
        /// <param name="e_mail">Initial value of the e_mail property.</param>
        /// <param name="home_tel">Initial value of the Home_tel property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="work_Tel">Initial value of the Work_Tel property.</param>
        public static contactdetail Createcontactdetail(global::System.Int32 id, global::System.String cellNumber, global::System.String e_mail, global::System.String home_tel, global::System.Int32 memberId, global::System.String work_Tel)
        {
            contactdetail contactdetail = new contactdetail();
            contactdetail.Id = id;
            contactdetail.CellNumber = cellNumber;
            contactdetail.e_mail = e_mail;
            contactdetail.Home_tel = home_tel;
            contactdetail.MemberId = memberId;
            contactdetail.Work_Tel = work_Tel;
            return contactdetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CellNumber
        {
            get
            {
                return _CellNumber;
            }
            set
            {
                OnCellNumberChanging(value);
                ReportPropertyChanging("CellNumber");
                _CellNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CellNumber");
                OnCellNumberChanged();
            }
        }
        private global::System.String _CellNumber;
        partial void OnCellNumberChanging(global::System.String value);
        partial void OnCellNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String e_mail
        {
            get
            {
                return _e_mail;
            }
            set
            {
                One_mailChanging(value);
                ReportPropertyChanging("e_mail");
                _e_mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("e_mail");
                One_mailChanged();
            }
        }
        private global::System.String _e_mail;
        partial void One_mailChanging(global::System.String value);
        partial void One_mailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Home_tel
        {
            get
            {
                return _Home_tel;
            }
            set
            {
                OnHome_telChanging(value);
                ReportPropertyChanging("Home_tel");
                _Home_tel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Home_tel");
                OnHome_telChanged();
            }
        }
        private global::System.String _Home_tel;
        partial void OnHome_telChanging(global::System.String value);
        partial void OnHome_telChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private global::System.Int32 _MemberId;
        partial void OnMemberIdChanging(global::System.Int32 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Work_Tel
        {
            get
            {
                return _Work_Tel;
            }
            set
            {
                OnWork_TelChanging(value);
                ReportPropertyChanging("Work_Tel");
                _Work_Tel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Work_Tel");
                OnWork_TelChanged();
            }
        }
        private global::System.String _Work_Tel;
        partial void OnWork_TelChanging(global::System.String value);
        partial void OnWork_TelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkAddress_Contactdetails", "address")]
        public EntityCollection<address> addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<address>("hisbodymanagerModel.fkAddress_Contactdetails", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<address>("hisbodymanagerModel.fkAddress_Contactdetails", "address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "kfcontactdetails_member", "member")]
        public member member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.kfcontactdetails_member", "member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.kfcontactdetails_member", "member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<member> memberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.kfcontactdetails_member", "member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<member>("hisbodymanagerModel.kfcontactdetails_member", "member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="gender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class gender : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new gender object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static gender Creategender(global::System.Int32 id, global::System.String name)
        {
            gender gender = new gender();
            gender.Id = id;
            gender.Name = name;
            return gender;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkmember_gender", "member")]
        public EntityCollection<member> members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<member>("hisbodymanagerModel.fkmember_gender", "member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<member>("hisbodymanagerModel.fkmember_gender", "member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new group object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static group Creategroup(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            group group = new group();
            group.Id = id;
            group.Name = name;
            group.IsActive = isActive;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkgroup", "usergroup")]
        public EntityCollection<usergroup> usergroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<usergroup>("hisbodymanagerModel.fkgroup", "usergroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<usergroup>("hisbodymanagerModel.fkgroup", "usergroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="grouptype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class grouptype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new grouptype object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static grouptype Creategrouptype(global::System.Int32 id)
        {
            grouptype grouptype = new grouptype();
            grouptype.Id = id;
            return grouptype;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkGroup_GroupType", "membergroup")]
        public EntityCollection<membergroup> membergroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<membergroup>("hisbodymanagerModel.fkGroup_GroupType", "membergroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<membergroup>("hisbodymanagerModel.fkGroup_GroupType", "membergroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="meetingtype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class meetingtype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new meetingtype object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static meetingtype Createmeetingtype(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            meetingtype meetingtype = new meetingtype();
            meetingtype.Id = id;
            meetingtype.Name = name;
            meetingtype.IsActive = isActive;
            return meetingtype;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new member object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="genderId">Initial value of the GenderId property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="nationalityId">Initial value of the NationalityId property.</param>
        /// <param name="churchInformationId">Initial value of the ChurchInformationId property.</param>
        /// <param name="rolesId">Initial value of the RolesId property.</param>
        /// <param name="dateCompletedMembership">Initial value of the DateCompletedMembership property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="dateJoinedMinistry">Initial value of the DateJoinedMinistry property.</param>
        /// <param name="cellGroupId">Initial value of the CellGroupId property.</param>
        public static member Createmember(global::System.Int32 id, global::System.String firstName, global::System.String surname, global::System.Int32 titleId, global::System.Int32 genderId, global::System.Int32 dateOfBirth, global::System.String nationalityId, global::System.Int32 churchInformationId, global::System.Int32 rolesId, global::System.DateTime dateCompletedMembership, global::System.Boolean isActive, global::System.DateTime dateJoinedMinistry, global::System.Int32 cellGroupId)
        {
            member member = new member();
            member.Id = id;
            member.FirstName = firstName;
            member.Surname = surname;
            member.TitleId = titleId;
            member.GenderId = genderId;
            member.DateOfBirth = dateOfBirth;
            member.NationalityId = nationalityId;
            member.ChurchInformationId = churchInformationId;
            member.RolesId = rolesId;
            member.DateCompletedMembership = dateCompletedMembership;
            member.IsActive = isActive;
            member.DateJoinedMinistry = dateJoinedMinistry;
            member.CellGroupId = cellGroupId;
            return member;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private global::System.Int32 _TitleId;
        partial void OnTitleIdChanging(global::System.Int32 value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                OnGenderIdChanging(value);
                ReportPropertyChanging("GenderId");
                _GenderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderId");
                OnGenderIdChanged();
            }
        }
        private global::System.Int32 _GenderId;
        partial void OnGenderIdChanging(global::System.Int32 value);
        partial void OnGenderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.Int32 _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.Int32 value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NationalityId
        {
            get
            {
                return _NationalityId;
            }
            set
            {
                OnNationalityIdChanging(value);
                ReportPropertyChanging("NationalityId");
                _NationalityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NationalityId");
                OnNationalityIdChanged();
            }
        }
        private global::System.String _NationalityId;
        partial void OnNationalityIdChanging(global::System.String value);
        partial void OnNationalityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchInformationId
        {
            get
            {
                return _ChurchInformationId;
            }
            set
            {
                OnChurchInformationIdChanging(value);
                ReportPropertyChanging("ChurchInformationId");
                _ChurchInformationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchInformationId");
                OnChurchInformationIdChanged();
            }
        }
        private global::System.Int32 _ChurchInformationId;
        partial void OnChurchInformationIdChanging(global::System.Int32 value);
        partial void OnChurchInformationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolesId
        {
            get
            {
                return _RolesId;
            }
            set
            {
                OnRolesIdChanging(value);
                ReportPropertyChanging("RolesId");
                _RolesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RolesId");
                OnRolesIdChanged();
            }
        }
        private global::System.Int32 _RolesId;
        partial void OnRolesIdChanging(global::System.Int32 value);
        partial void OnRolesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCompletedMembership
        {
            get
            {
                return _DateCompletedMembership;
            }
            set
            {
                OnDateCompletedMembershipChanging(value);
                ReportPropertyChanging("DateCompletedMembership");
                _DateCompletedMembership = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCompletedMembership");
                OnDateCompletedMembershipChanged();
            }
        }
        private global::System.DateTime _DateCompletedMembership;
        partial void OnDateCompletedMembershipChanging(global::System.DateTime value);
        partial void OnDateCompletedMembershipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateJoinedMinistry
        {
            get
            {
                return _DateJoinedMinistry;
            }
            set
            {
                OnDateJoinedMinistryChanging(value);
                ReportPropertyChanging("DateJoinedMinistry");
                _DateJoinedMinistry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateJoinedMinistry");
                OnDateJoinedMinistryChanged();
            }
        }
        private global::System.DateTime _DateJoinedMinistry;
        partial void OnDateJoinedMinistryChanging(global::System.DateTime value);
        partial void OnDateJoinedMinistryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CellGroupId
        {
            get
            {
                return _CellGroupId;
            }
            set
            {
                OnCellGroupIdChanging(value);
                ReportPropertyChanging("CellGroupId");
                _CellGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CellGroupId");
                OnCellGroupIdChanged();
            }
        }
        private global::System.Int32 _CellGroupId;
        partial void OnCellGroupIdChanging(global::System.Int32 value);
        partial void OnCellGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkAddress_memeber", "address")]
        public EntityCollection<address> addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<address>("hisbodymanagerModel.fkAddress_memeber", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<address>("hisbodymanagerModel.fkAddress_memeber", "address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkChurchMemberRoles_member", "churchmemberrole")]
        public EntityCollection<churchmemberrole> churchmemberroles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<churchmemberrole>("hisbodymanagerModel.fkChurchMemberRoles_member", "churchmemberrole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<churchmemberrole>("hisbodymanagerModel.fkChurchMemberRoles_member", "churchmemberrole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkComments_Member", "comment")]
        public EntityCollection<comment> comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comment>("hisbodymanagerModel.fkComments_Member", "comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comment>("hisbodymanagerModel.fkComments_Member", "comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "kfcontactdetails_member", "contactdetail")]
        public EntityCollection<contactdetail> contactdetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<contactdetail>("hisbodymanagerModel.kfcontactdetails_member", "contactdetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<contactdetail>("hisbodymanagerModel.kfcontactdetails_member", "contactdetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkmember_gender", "gender")]
        public gender gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<gender>("hisbodymanagerModel.fkmember_gender", "gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<gender>("hisbodymanagerModel.fkmember_gender", "gender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<gender> genderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<gender>("hisbodymanagerModel.fkmember_gender", "gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<gender>("hisbodymanagerModel.fkmember_gender", "gender", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkMemberAttendance_Member", "memberattendance")]
        public EntityCollection<memberattendance> memberattendances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<memberattendance>("hisbodymanagerModel.fkMemberAttendance_Member", "memberattendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<memberattendance>("hisbodymanagerModel.fkMemberAttendance_Member", "memberattendance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="memberattendance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class memberattendance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new memberattendance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="meetingTypeId">Initial value of the MeetingTypeId property.</param>
        public static memberattendance Creatememberattendance(global::System.Int32 id, global::System.Int32 memberId, global::System.DateTime date, global::System.Int32 meetingTypeId)
        {
            memberattendance memberattendance = new memberattendance();
            memberattendance.Id = id;
            memberattendance.MemberId = memberId;
            memberattendance.Date = date;
            memberattendance.MeetingTypeId = meetingTypeId;
            return memberattendance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private global::System.Int32 _MemberId;
        partial void OnMemberIdChanging(global::System.Int32 value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingTypeId
        {
            get
            {
                return _MeetingTypeId;
            }
            set
            {
                OnMeetingTypeIdChanging(value);
                ReportPropertyChanging("MeetingTypeId");
                _MeetingTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingTypeId");
                OnMeetingTypeIdChanged();
            }
        }
        private global::System.Int32 _MeetingTypeId;
        partial void OnMeetingTypeIdChanging(global::System.Int32 value);
        partial void OnMeetingTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkMemberAttendance_Member", "member")]
        public member member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkMemberAttendance_Member", "member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkMemberAttendance_Member", "member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<member> memberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<member>("hisbodymanagerModel.fkMemberAttendance_Member", "member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<member>("hisbodymanagerModel.fkMemberAttendance_Member", "member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="membergroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class membergroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new membergroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="groupTypeId">Initial value of the GroupTypeId property.</param>
        /// <param name="church">Initial value of the Church property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static membergroup Createmembergroup(global::System.Int32 id, global::System.String name, global::System.Int32 groupTypeId, global::System.String church, global::System.Boolean isActive)
        {
            membergroup membergroup = new membergroup();
            membergroup.Id = id;
            membergroup.Name = name;
            membergroup.GroupTypeId = groupTypeId;
            membergroup.Church = church;
            membergroup.IsActive = isActive;
            return membergroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupTypeId
        {
            get
            {
                return _GroupTypeId;
            }
            set
            {
                OnGroupTypeIdChanging(value);
                ReportPropertyChanging("GroupTypeId");
                _GroupTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupTypeId");
                OnGroupTypeIdChanged();
            }
        }
        private global::System.Int32 _GroupTypeId;
        partial void OnGroupTypeIdChanging(global::System.Int32 value);
        partial void OnGroupTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Church
        {
            get
            {
                return _Church;
            }
            set
            {
                OnChurchChanging(value);
                ReportPropertyChanging("Church");
                _Church = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Church");
                OnChurchChanged();
            }
        }
        private global::System.String _Church;
        partial void OnChurchChanging(global::System.String value);
        partial void OnChurchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkGroup_GroupType", "grouptype")]
        public grouptype grouptype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<grouptype>("hisbodymanagerModel.fkGroup_GroupType", "grouptype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<grouptype>("hisbodymanagerModel.fkGroup_GroupType", "grouptype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<grouptype> grouptypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<grouptype>("hisbodymanagerModel.fkGroup_GroupType", "grouptype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<grouptype>("hisbodymanagerModel.fkGroup_GroupType", "grouptype", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new region object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static region Createregion(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            region region = new region();
            region.Id = id;
            region.Name = name;
            region.IsActive = isActive;
            return region;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class title : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new title object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static title Createtitle(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            title title = new title();
            title.Id = id;
            title.Name = name;
            title.IsActive = isActive;
            return title;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static user Createuser(global::System.Int32 id, global::System.String username, global::System.Int32 churchId, global::System.String password, global::System.DateTime dateCreated, global::System.Boolean isActive)
        {
            user user = new user();
            user.Id = id;
            user.username = username;
            user.ChurchId = churchId;
            user.password = password;
            user.DateCreated = dateCreated;
            user.IsActive = isActive;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLogInDate
        {
            get
            {
                return _LastLogInDate;
            }
            set
            {
                OnLastLogInDateChanging(value);
                ReportPropertyChanging("LastLogInDate");
                _LastLogInDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogInDate");
                OnLastLogInDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLogInDate;
        partial void OnLastLogInDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLogInDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkuser", "usergroup")]
        public EntityCollection<usergroup> usergroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<usergroup>("hisbodymanagerModel.fkuser", "usergroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<usergroup>("hisbodymanagerModel.fkuser", "usergroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="usergroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usergroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usergroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static usergroup Createusergroup(global::System.Int32 id, global::System.Boolean isActive)
        {
            usergroup usergroup = new usergroup();
            usergroup.Id = id;
            usergroup.IsActive = isActive;
            return usergroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Groupid
        {
            get
            {
                return _Groupid;
            }
            set
            {
                OnGroupidChanging(value);
                ReportPropertyChanging("Groupid");
                _Groupid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Groupid");
                OnGroupidChanged();
            }
        }
        private Nullable<global::System.Int32> _Groupid;
        partial void OnGroupidChanging(Nullable<global::System.Int32> value);
        partial void OnGroupidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkgroup", "group")]
        public group group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("hisbodymanagerModel.fkgroup", "group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("hisbodymanagerModel.fkgroup", "group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<group> groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("hisbodymanagerModel.fkgroup", "group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<group>("hisbodymanagerModel.fkgroup", "group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkuser", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("hisbodymanagerModel.fkuser", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("hisbodymanagerModel.fkuser", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("hisbodymanagerModel.fkuser", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("hisbodymanagerModel.fkuser", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hisbodymanagerModel", Name="zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new zone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        public static zone Createzone(global::System.Int32 id, global::System.String name, global::System.Boolean isActive, global::System.Int32 regionId)
        {
            zone zone = new zone();
            zone.Id = id;
            zone.name = name;
            zone.IsActive = isActive;
            zone.RegionId = regionId;
            return zone;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hisbodymanagerModel", "fkchurchinformation_zone", "churchinformation")]
        public EntityCollection<churchinformation> churchinformations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<churchinformation>("hisbodymanagerModel.fkchurchinformation_zone", "churchinformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<churchinformation>("hisbodymanagerModel.fkchurchinformation_zone", "churchinformation", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
